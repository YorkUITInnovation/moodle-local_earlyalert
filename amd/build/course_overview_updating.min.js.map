{"version":3,"file":"course_overview_updating.min.js","sources":["../src/course_overview_updating.js"],"sourcesContent":["import ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\nexport const init = () => {\n    update_student_status_for_advisor();\n    update_student_status_for_instructor();\n};\n\nfunction update_student_status_for_instructor() {\n\n    // Select all checkboxes with the class .checkbox-instructor-followup\n    const checkboxes = document.querySelectorAll('.checkbox-instructor-followup');\n\n    // Loop through each checkbox and add an event listener\n    checkboxes.forEach(function(checkbox) {\n        checkbox.addEventListener('change', function() {\n            const logId = this.getAttribute('data-logid');\n            const status = this.checked ? 1 : 0;\n\n            ajax.call([{\n                methodname: 'earlyalert_update_student_status_instructor',\n                args: {\n                    logid: logId,\n                    status: status\n                }\n            }])[0].then(function (response) {\n                console.log(response);\n            }).catch(function (error) {\n                console.error('Failed to update student status:', error);\n            });\n        });\n    });\n}\n\nfunction update_student_status_for_advisor() {\n    // Select all checkboxes with the class .checkbox-advisor-followup\n    const checkboxes = document.querySelectorAll('.checkbox-advisor-followup');\n\n    // Loop through each checkbox and add an event listener\n    checkboxes.forEach(function(checkbox) {\n        checkbox.addEventListener('change', function() {\n            const logId = this.getAttribute('data-logid');\n            const status = this.checked ? 1 : 0;\n\n            ajax.call([{\n                methodname: 'earlyalert_update_student_status_advisor',\n                args: {\n                    logid: logId,\n                    status: status\n                }\n            }])[0].then(function (response) {\n                console.log(response);\n            }).catch(function (error) {\n                console.error('Failed to update student status:', error);\n            });\n        });\n    });\n}"],"names":["document","querySelectorAll","forEach","checkbox","addEventListener","logId","this","getAttribute","status","checked","call","methodname","args","logid","then","response","console","log","catch","error"],"mappings":"gZAIoB,KAiCGA,SAASC,iBAAiB,8BAGlCC,SAAQ,SAASC,UACxBA,SAASC,iBAAiB,UAAU,iBAC1BC,MAAQC,KAAKC,aAAa,cAC1BC,OAASF,KAAKG,QAAU,EAAI,gBAE7BC,KAAK,CAAC,CACPC,WAAY,2CACZC,KAAM,CACFC,MAAOR,MACPG,OAAQA,WAEZ,GAAGM,MAAK,SAAUC,UAClBC,QAAQC,IAAIF,aACbG,OAAM,SAAUC,OACfH,QAAQG,MAAM,mCAAoCA,gBA1C3CnB,SAASC,iBAAiB,iCAGlCC,SAAQ,SAASC,UACxBA,SAASC,iBAAiB,UAAU,iBAC1BC,MAAQC,KAAKC,aAAa,cAC1BC,OAASF,KAAKG,QAAU,EAAI,gBAE7BC,KAAK,CAAC,CACPC,WAAY,8CACZC,KAAM,CACFC,MAAOR,MACPG,OAAQA,WAEZ,GAAGM,MAAK,SAAUC,UAClBC,QAAQC,IAAIF,aACbG,OAAM,SAAUC,OACfH,QAAQG,MAAM,mCAAoCA"}