{"version":3,"file":"filter_students_grade.min.js","sources":["../src/filter_students_grade.js"],"sourcesContent":["import ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport ModalFactory from 'core/modal_factory';\nimport {get_string as getString} from 'core/str';\nimport notification from 'core/notification';\n\nexport const init = () => {\n    alert_type_button();\n    // get_users();\n    // get_templates();\n};\n\nfunction alert_type_button() {\n    // Get data-link when .early-alert-type-button link is clicked\n    document.addEventListener('click', function (event) {\n        if (event.target.classList.contains('early-alert-type-button')) {\n            let alert_type = event.target.getAttribute('data-link');\n            let course_name = event.target.getAttribute('data-name');\n            let course_id = event.target.getAttribute('data-course_id');\n            // Get student list based on alert type\n            setup_filter_students_by_grade(course_id, 9, course_name, alert_type);\n        }\n    });\n}\n\n\n/**\n * Adds students with grades\n */\n// function filter_students_by_default_grade() {\n//\n//     // Get course id from the hidden input field wiht id early_alert_filter_course_id\n//     const course_id = document.getElementById('early_alert_filter_course_id').value;\n//     // initial default setup of student list\n//     setup_filter_students_by_grade(course_id, 9); // extract this 9 from php which might be configurable in the future\n//\n// }\n\nfunction filter_students_by_grade_select() {\n\n    // Get the s delected grade value from the dropdown\n    const grade_select = document.getElementById('id_early_alert_filter_grade_select');\n    const course_id = document.getElementById('early_alert_filter_course_id').value;\n    const course_name = document.getElementById('early_alert_course_name').value;\n    const alert_type = document.getElementById('early-alert-alert-type').value;\n    // setup listener for drop down selection\n\n    grade_select.addEventListener('change', function (e) {\n        let grade_letter_id = e.target.value;\n        setup_filter_students_by_grade(course_id, grade_letter_id, course_name, alert_type);\n\n    });\n}\n\n/**\n * Fetches the student list based on the course_id and grade_letter_id\n * @param course_id\n * @param grade_letter_id\n * @param course_name\n * @param alert_type\n */\nfunction setup_filter_students_by_grade(course_id, grade_letter_id, course_name, alert_type) {\n    let selected_students = [];\n    // convert course_id into an integer\n    course_id = parseInt(course_id);\n    grade_letter_id = parseInt(grade_letter_id);\n    // Add course_id to element with id early_alert_filter_course_id\n    document.getElementById('early_alert_filter_course_id').value = course_id;\n    // Add alert type to element with id early-alert-alert-type\n    document.getElementById('early-alert-alert-type').value = alert_type;\n    // Add course name to element with id early_alert_course_name\n    document.getElementById('early_alert_course_name').value = course_name;\n\n    // Only display if course_id is greater than 0\n    if (course_id > 0) {\n        //Show loader\n        Templates.render('local_earlyalert/loader', {})\n            .then(function (html, js) {\n                // Insert the rendered template into the target element\n                document.getElementById('early-alert-student-results').innerHTML = html;\n                Templates.runTemplateJS(js);\n            })\n            .catch(function (error) {\n                console.error('Failed to render template:', error);\n            });\n\n\n\n        // Fetch student list and templates\n        var get_grades_and_templates = ajax.call([\n            { methodname: 'earlyalert_course_grades_percent_get', args: { id: course_id, grade_letter_id: grade_letter_id } },\n            { methodname: 'earlyalert_course_student_templates', args: { id: course_id } }\n        ]);\n\n        const finalCache = new Map();\n\n        Promise.all(get_grades_and_templates).then(([grades_response, templates_response]) => {\n            \n            // Reformat the data to display in a grid\n            let num_students = grades_response.length;\n            console.log('Number of students returned: ' + num_students);\n            let num_rows = Math.min(3, Math.ceil(num_students / 3));\n            let num_cols = Math.ceil(num_students / num_rows);\n            let display_data = {\n                num_rows: num_rows,\n                num_cols: num_cols,\n                student_rows: []\n            };\n\n            let templates = [];\n\n// Initialize rows array\n            for (let r = 0; r < num_rows; r++) {\n                display_data.student_rows[r] = {students: []};\n            }\n\n            let row = 0;\n            let col = 0;\n\n            grades_response.forEach(result => {\n                if (typeof result === 'object') {\n                    if (!templates.includes(result.campus + \"_\" + result.faculty + \"_\" + result.major)) {\n                        templates.push(result.campus + \"_\" + result.faculty + \"_\" + result.major);\n                    }\n                    display_data.student_rows[row].students[col] = result;\n                    col++;\n                    if (col === num_cols) {\n                        col = 0;\n                        row++;\n                    }\n                }\n            });\n\n            display_data.templates = JSON.stringify(templates);\n\n            if (alert_type === 'grade') {\n                // Add alert_type to display_data\n                display_data.alert_type = 'Low Grade';\n                display_data.grade = true;\n            }\n\n            if (alert_type === 'assign') {\n                // Add alert_type to display_data\n                display_data.alert_type = 'Missed Assignment';\n                display_data.assign = true;\n            }\n\n            if (alert_type === 'exam') {\n                // Add alert_type to display_data\n                display_data.alert_type = 'Missed Exam';\n                display_data.exam = true;\n            }\n            display_data.fullname = course_name;\n\n            // Render the template with display_data\n            Templates.render('local_earlyalert/course_student_list', display_data)\n                .then(function (html, js) {\n                    // Insert the rendered template into the target element\n                    document.getElementById('early-alert-student-results').innerHTML = html;\n                    Templates.runTemplateJS(js);\n                    // set default grade letter selected\n                    let grade_select = document.getElementById('id_early_alert_filter_grade_select');\n                    grade_select.value = grade_letter_id;\n                    // setup listener\n                    // filter_students_by_grade_select();\n                    check_all_student_grades(selected_students);\n                    check_allnone_listener(selected_students);\n\n                    const cachedArrayElement = document.getElementById('early-alert-template-cache');\n                    const cachedArray = JSON.parse(cachedArrayElement.value);\n\n                    templates_response.forEach(result => {\n                        if (typeof result === 'object') {\n                            if (cachedArray.includes(result.templateKey)){\n                                // finalCache.push({key: result.templateKey, value: result.message});\n                                finalCache.set(result.templateKey, result.message);\n                            }\n                        }\n                    });\n                    finalCache.set('course_name', course_name);\n                    setup_preview_emails(finalCache);\n                    setup_send_emails();\n                })\n                .catch(function (error) {\n                    console.error('Failed to render template:', error);\n                });\n        });\n\n    }\n}\n\n\nfunction check_all_student_grades(selected_students) {\n    const student_ids_selected = document.getElementById(\"early-alert-student-ids\") || {};\n    student_ids_selected.value = [];\n    const check_all_none_checkbox = document.getElementById('early-alert-checkall-student-checkbox');\n    check_all_none_checkbox.checked = true;\n    //check box for grade showing - remove later\n    const student_checkboxes = document.querySelectorAll(\"input[class^='early-alert-student-checkbox']\");\n    // check box for grade showing - remove later\n    student_checkboxes.forEach(function (checkbox) {\n        checkbox.checked = true;\n        selected_students.push(checkbox.getAttribute('data-student-id'));\n    });\n    student_ids_selected.value = JSON.stringify(selected_students);\n}\n\nfunction check_allnone_listener(selected_students) {\n    // Add an event listener to the select all checkbox\n    const check_all_none_checkbox = document.getElementById('early-alert-checkall-student-checkbox');\n    const student_ids_selected = document.getElementById(\"early-alert-student-ids\") || {};\n\n    check_all_none_checkbox.addEventListener('click', function () {\n        student_ids_selected.value = [];\n        // Get all checkboxes within the list\n        let checkboxes = document.querySelectorAll(\"input[class^='early-alert-student-checkbox']\");\n        // Loop through each checkbox and toggle its selection based on the state of the select all checkbox\n        checkboxes.forEach(function (checkbox) {\n            if (check_all_none_checkbox.checked) {\n                checkbox.checked = true;\n                selected_students.push(checkbox.getAttribute('data-student-id'));\n            } else {\n                checkbox.checked = false;\n                selected_students = selected_students.filter(item => item !== checkbox.getAttribute('data-student-id'));\n            }\n        });\n        student_ids_selected.value = JSON.stringify(selected_students);\n    });\n}\n\nfunction setup_preview_emails(templateCache) {\n    const preview_buttons = document.querySelectorAll(\".early-alert-preview-button\");\n    // Loop through each checkbox and toggle its selection based on the state of the select all checkbox\n    console.log(\"template cache:\", templateCache);\n    let record_data = {};\n    preview_buttons.forEach(function (button) {\n        const checkbox = button.closest('tr').querySelector('.early-alert-student-checkbox');\n        const assigngrade = button.closest('tr').querySelector('.early-alert-grade-column').querySelector('.badge').innerHTML;\n        if (checkbox) {\n\n            // now, access the parent <tr> element (the table row)\n            const table_row = checkbox.parentNode;\n            // extract the student name from the second <td> element within the table row\n            const student_name_td = table_row.nextElementSibling;\n            // fix and parse the name\n            const student_lname_fname = student_name_td.firstChild;\n            var student_name_arr = [];\n            var student_name = \"\";\n            student_lname_fname.data.split(/\\s*,\\s*/).forEach(function(me) {\n                student_name_arr.push(me);\n            });\n            student_name = student_name_arr[1] + ' ' + student_name_arr[0];\n\n            const student_id = checkbox.getAttribute('data-student-id');\n            const studentCampusAttr = checkbox.getAttribute('data-student-campus');\n            const studentFacultyAttr = checkbox.getAttribute('data-student-faculty');\n            const studentMajorAttr = checkbox.getAttribute('data-student-major');\n            var templateKey = studentCampusAttr  + '_'  + studentFacultyAttr  + '_'  + studentMajorAttr;\n            var templateEmailContent = '';\n\n            console.log(\"Looking for '\" + templateKey + \"'\");\n            console.log(\"map get:'\", templateCache.get(templateKey),\"'\");\n            templateCache.forEach(function(value, key) {\n                console.log(\"key:\", key);\n                console.log(\"value:\", value);\n            });\n            if (templateCache.includes(templateKey)) {\n                templateEmailContent = templateCache[templateKey].message;\n            } else {\n                templateEmailContent = 'Template not found';\n            }\n\n        } else {\n            // console.log(\"couldn't find checkbox :/\");\n        }\n        if (assigngrade){\n            console.log(\"assign grade: \", assigngrade);\n        }\n        console.log(\"template email content:\", templateEmailContent);\n\n\n        // assemble record data for individual buttons which includes student and template data\n        record_data.student_name = student_name;\n        record_data.course_name = templateCache.get('course_name');\n        record_data.templateEmailContent = templateEmailContent;\n\n        button.addEventListener('click', function () {\n            setup_preview_buttons_from_template(record_data)\n        });\n    });\n}\n\nfunction setup_preview_buttons_from_template(student_template_data) {\n\n    ModalFactory.create({\n        title: getString('preview_email', 'local_earlyalert'),\n        type: ModalFactory.types.CANCEL,\n        body: Templates.render('local_earlyalert/preview_student_email', {\n            name: student_template_data.template_name,\n            student_name: student_template_data.student_name,\n            subject: 'Grade in ' + student_template_data.course_name,\n            message: student_template_data.templateEmailContent,\n            instructor_name: ''\n        }),\n        large: true,\n    }).then(modal => {\n        modal.show();\n    });\n}\nfunction setup_send_emails() {\n    // Pop-up notification when .btn-local-organization-delete-advisor is clicked\n    const send_button = document.getElementById('early-alert-send-button1');\n    const send_button2 = document.getElementById('early-alert-send-button2');\n    var ids = document.getElementById(\"early-alert-student-ids\").value; // hidden field ids\n    send_button.addEventListener('click', function () {\n        create_notification_dialog(ids);\n    });\n    send_button2.addEventListener('click', function () {\n        create_notification_dialog(ids);\n    });\n}\n\nfunction create_notification_dialog(ids) {\n    // Get the data id attribute value\n    var send_string = getString('send_email', 'local_earlyalert');\n    var send_dialog_text = getString('send_dialog_text', 'local_earlyalert');\n    var send = getString('send', 'local_earlyalert');\n    var cancel = getString('cancel', 'local_earlyalert');\n    var sent_email = getString('sent_email', 'local_earlyalert');\n    var could_not_send_email = getString('could_not_send_email', 'local_earlyalert');\n    var sent_dialog_text = getString('sent_dialog_text', 'local_earlyalert');\n\n    // Notification\n    notification.confirm(send_string, send_dialog_text, send, cancel, function () {\n        // Delete the record\n        var sendEmail = ajax.call([{\n            methodname: 'local_earlyalert_sendEmail',\n            args: {\n                id: ids,\n            }\n        }]);\n        sendEmail[0].done(function () {\n            // success\n            notification.alert('Email', sent_email);\n        }).fail(function () {\n            //notification.alert(could_not_send_email);\n            notification.alert('Email', sent_dialog_text);\n        });\n    });\n}\n\n\nfunction show_grades() {\n    // check box for grade showing - remove later\n    const show_grade_checkbox = document.getElementById('id_early_alert_filter_grade_chk');\n    // check box for grade showing - remove later\n    show_grade_checkbox.addEventListener('click', function () {\n        let grade_pills = document.querySelectorAll(\"span.pill\");\n        grade_pills.forEach(function (grade_pill) {\n            if (show_grade_checkbox.checked) {\n                if (grade_pill.style.display == 'none') {\n                    grade_pill.style.display = 'block';\n                }\n            } else {\n                grade_pill.style.display = 'none';\n            }\n        });\n    });\n}\n\n/**\n * Get users from the search input\n */\nfunction get_users() {\n    const inputElement = document.getElementById('search');\n    const datalistElement = document.getElementById('early-alert-impersonate');\n\n    // Event listener for input element\n    inputElement.addEventListener('input', function (event) {\n        const query = event.target.value;\n        var get_users = ajax.call([{\n            methodname: 'organization_users_get',\n            args: {\n                name: query\n            }\n        }]);\n        /*get_users[0].done(function (users) {\n            console.log(users);\n            datalistElement.innerHTML = '';\n            users.forEach(user => {\n                const option = document.createElement('option');\n                option.value = user.id;\n                option.text = user.firstname + ' ' + user.lastname;\n                datalistElement.appendChild(option);\n            });\n            // When a selection is made, reload the page with the user_id as a parameter\n            inputElement.addEventListener('change', function (event) {\n                window.location.href = window.location.href + '?user_id=' + event.target.value;\n            });\n\n        }).fail(function (e) {\n            alert(e);\n            // fail gracefully somehow :'( ;\n        });*/\n    });\n}\n\nfunction get_templates() {\n    const templatecache = document.getElementById('early-alert-template-cache');\n\n    // Event listener for input element\n    inputElement.addEventListener('input', function (event) {\n        const query = event.target.value;\n        var get_templates = ajax.call([{\n            methodname: 'organization_users_get',\n            args: {\n                name: query\n            }\n        }]);\n        get_templates[0].done(function (users) {\n            console.log(users);\n            datalistElement.innerHTML = '';\n            users.forEach(user => {\n                const option = document.createElement('option');\n                option.value = user.id;\n                option.text = user.firstname + ' ' + user.lastname;\n                datalistElement.appendChild(option);\n            });\n            // When a selection is made, reload the page with the user_id as a parameter\n            inputElement.addEventListener('change', function (event) {\n                window.location.href = window.location.href + '?user_id=' + event.target.value;\n            });\n\n        }).fail(function (e) {\n            alert(e);\n            // fail gracefully somehow :'( ;\n        });\n    });\n}"],"names":["setup_filter_students_by_grade","course_id","grade_letter_id","course_name","alert_type","selected_students","parseInt","document","getElementById","value","render","then","html","js","innerHTML","runTemplateJS","catch","error","console","get_grades_and_templates","ajax","call","methodname","args","id","finalCache","Map","Promise","all","_ref","grades_response","templates_response","num_students","length","log","num_rows","Math","min","ceil","num_cols","display_data","student_rows","templates","r","students","row","col","forEach","result","includes","campus","faculty","major","push","JSON","stringify","grade","assign","exam","fullname","student_ids_selected","checked","querySelectorAll","checkbox","getAttribute","check_all_student_grades","check_all_none_checkbox","addEventListener","filter","item","check_allnone_listener","cachedArrayElement","cachedArray","parse","templateKey","set","message","templateCache","preview_buttons","record_data","button","closest","querySelector","assigngrade","student_lname_fname","parentNode","nextElementSibling","firstChild","student_name_arr","student_name","data","split","me","templateEmailContent","get","key","student_template_data","create","title","type","ModalFactory","types","CANCEL","body","Templates","name","template_name","subject","instructor_name","large","modal","show","setup_preview_emails","send_button","send_button2","ids","create_notification_dialog","setup_send_emails","send_string","send_dialog_text","send","cancel","sent_email","sent_dialog_text","confirm","done","alert","fail","event","target","classList","contains"],"mappings":"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"}