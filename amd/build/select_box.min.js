define("local_earlyalert/select_box",["exports","core/ajax","core/str"],(function(_exports,_ajax,_str){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};var _default={init:function(selector,method,placeholder){const selectElement=document.querySelector(selector);if(!selectElement)return;const searchInput=document.createElement("input");searchInput.type="text",searchInput.placeholder=placeholder,selectElement.style.marginBottom="10px",searchInput.classList.add("form-control"),searchInput.style.display="none",selectElement.parentNode.insertBefore(searchInput,selectElement.nextSibling),selectElement.addEventListener("click",(function(){searchInput.style.display="block",searchInput.focus()}));const opt=document.createElement("option");opt.value="",opt.textContent=placeholder,searchInput.addEventListener("input",(function(){const searchTerm=searchInput.value||"";searchTerm.length<3||_ajax.default.call([{methodname:method,args:{search:searchTerm},done:function(response){!function(select,options){select.hasAttribute("multiple")?select.selectedOptions.length>0||(select.innerHTML=""):(select.innerHTML="test",select.appendChild(opt));select.appendChild(opt),select.size=options.length+2,options.forEach((option=>{const opt=document.createElement("option");opt.value=option.value,opt.textContent=option.label,select.appendChild(opt)}))}(selectElement,response)},fail:function(error){console.error(error)}}])})),selectElement.hasAttribute("multiple")?selectElement.addEventListener("change",(function(){Array.from(selectElement.selectedOptions).map((opt=>opt.value))})):selectElement.addEventListener("change",(function(){const selectedUserId=selectElement.value;if(selectedUserId){const url=new URL(window.location.href);url.searchParams.set("user_id",selectedUserId),url.searchParams.delete("course_id"),window.location.href=url.toString()}})),function(){const label=selectElement.labels[0];if(label&&selectElement.selectedIndex>0){const selectedText=selectElement.options[selectElement.selectedIndex].textContent;(0,_str.get_string)("impersonate_user","local_earlyalert",selectedText).then((function(labelText){label.textContent=labelText,console.log("resolved label text:",labelText)}))}}()}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=select_box.min.js.map